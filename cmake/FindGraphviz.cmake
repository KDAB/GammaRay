# - Try to find Graphviz
# Once done this will define
#
#  GRAPHVIZ_FOUND - system has Graphviz
#  GRAPHVIZ_INCLUDE_DIR - the Graphviz include directory
#  GRAPHVIZ_LIBRARY - Link these to use Graphviz
#  GRAPHVIZ_VERSION = The value of PACKAGE_VERSION defined in graphviz_version.h
#  GRAPHVIZ_MAJOR_VERSION = The library major version number
#  GRAPHVIZ_MINOR_VERSION = The library minor version number
#  GRAPHVIZ_PATCH_VERSION = The library patch version number
#
# This module reads hints about search locations from the following env variables:
#  GRAPHVIZ_ROOT          - Graphviz installation prefix
#                           (containing bin/, include/, etc.)

# Copyright (c) 2009, Adrien Bustany, <madcat@mymadcat.com>
# Copyright (c) 2013-2014 Kevin Funk <kevin.funk@kdab.com>

# Version computation and some cleanups by Allen Winter <allen.winter@kdab.com>
# Bug fixing for WIN32 and cleanups by Guillaume Jacquenot <guillaume.jacquenot@gmail.com>
# Copyright (c) 2012-2014 Klar√§lvdalens Datakonsult AB, a KDAB Group company <info@kdab.com>

# Redistribution and use is allowed according to the terms of the GPLv3+ license.

INCLUDE(CheckIncludeFiles)
INCLUDE(CMakePushCheckState)

IF(NOT GRAPHVIZ_MIN_VERSION)
  SET(GRAPHVIZ_MIN_VERSION "2.00")
ENDIF()

IF(GRAPHVIZ_INCLUDE_DIR
    AND GRAPHVIZ_CDT_LIBRARY
    AND (GRAPHVIZ_CGRAPH_LIBRARY OR GRAPHVIZ_GRAPH_LIBRARY)
    AND GRAPHVIZ_PATHPLAN_LIBRARY)
  SET(GRAPHVIZ_FIND_QUIETLY TRUE)
ENDIF()

SET(_GRAPHVIZ_ROOT $ENV{GRAPHVIZ_ROOT})

IF(NOT _GRAPHVIZ_ROOT)
  IF(WIN32)
    FIND_PROGRAM(DOT_TOOL dot)
    GET_FILENAME_COMPONENT(_GRAPHVIZ_ROOT ${DOT_TOOL} PATH)
  ENDIF()
ENDIF()

IF(_GRAPHVIZ_ROOT)
  SET(_GRAPHVIZ_INCLUDE_DIR ${_GRAPHVIZ_ROOT}/include)
  SET(_GRAPHVIZ_LIBRARY_DIR ${_GRAPHVIZ_ROOT}/lib)
  SET(_GRAPHVIZ_FIND_OPTS NO_DEFAULT_PATH)
ELSE()
  SET(_GRAPHVIZ_FIND_OPTS "")
ENDIF()

FIND_PATH(GRAPHVIZ_INCLUDE_DIR NAMES graphviz/graph.h graphviz/cgraph.h
  HINTS ${_GRAPHVIZ_INCLUDE_DIR}
  ${_GRAPHVIZ_FIND_OPTS})

IF(WIN32)
  IF(CMAKE_BUILD_TYPE STREQUAL "Release")
    SET(GRAPHVIZ_LIB_PATH_SUFFIX "release/lib")
  ELSE()
    SET(GRAPHVIZ_LIB_PATH_SUFFIX "debug/lib")
  ENDIF()
ELSE()
  SET(GRAPHVIZ_LIB_PATH_SUFFIX)
ENDIF()

FIND_LIBRARY(GRAPHVIZ_CDT_LIBRARY NAMES cdt
  HINTS ${_GRAPHVIZ_LIBRARY_DIR} PATH_SUFFIXES ${GRAPHVIZ_LIB_PATH_SUFFIX}
  ${_GRAPHVIZ_FIND_OPTS})
FIND_LIBRARY(GRAPHVIZ_GVC_LIBRARY NAMES gvc
  HINTS ${_GRAPHVIZ_LIBRARY_DIR} PATH_SUFFIXES ${GRAPHVIZ_LIB_PATH_SUFFIX}
  ${_GRAPHVIZ_FIND_OPTS})
FIND_LIBRARY(GRAPHVIZ_CGRAPH_LIBRARY NAMES cgraph
  HINTS ${_GRAPHVIZ_LIBRARY_DIR} PATH_SUFFIXES ${GRAPHVIZ_LIB_PATH_SUFFIX}
  ${_GRAPHVIZ_FIND_OPTS})
FIND_LIBRARY(GRAPHVIZ_GRAPH_LIBRARY NAMES graph
  HINTS ${_GRAPHVIZ_LIBRARY_DIR} PATH_SUFFIXES ${GRAPHVIZ_LIB_PATH_SUFFIX}
  ${_GRAPHVIZ_FIND_OPTS})
FIND_LIBRARY(GRAPHVIZ_PATHPLAN_LIBRARY NAMES pathplan
  HINTS ${_GRAPHVIZ_LIBRARY_DIR} PATH_SUFFIXES ${GRAPHVIZ_LIB_PATH_SUFFIX}
  ${_GRAPHVIZ_FIND_OPTS})

cmake_push_check_state()
SET(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${GRAPHVIZ_INCLUDE_DIR})
check_include_files(graphviz/graphviz_version.h HAVE_GRAPHVIZ_VERSION_H)
cmake_pop_check_state()

IF(GRAPHVIZ_INCLUDE_DIR AND GRAPHVIZ_CDT_LIBRARY AND GRAPHVIZ_GVC_LIBRARY
    AND (GRAPHVIZ_CGRAPH_LIBRARY OR GRAPHVIZ_GRAPH_LIBRARY) AND GRAPHVIZ_PATHPLAN_LIBRARY)
  IF(HAVE_GRAPHVIZ_VERSION_H OR WIN32)
    SET(GRAPHVIZ_FOUND TRUE)
  ENDIF()
ELSE()
  SET(GRAPHVIZ_FOUND FALSE)
ENDIF()

# Ok, now compute the version and make sure its greater then the min required
IF(GRAPHVIZ_FOUND)
  IF(NOT WIN32)
    SET(FIND_GRAPHVIZ_VERSION_SOURCE
      "#include <graphviz/graphviz_version.h>\n#include <stdio.h>\n int main()\n {\n printf(\"%s\",PACKAGE_VERSION);return 1;\n }\n")
    SET(FIND_GRAPHVIZ_VERSION_SOURCE_FILE ${CMAKE_BINARY_DIR}/CMakeTmp/FindGRAPHVIZ.cxx)
    FILE(WRITE "${FIND_GRAPHVIZ_VERSION_SOURCE_FILE}" "${FIND_GRAPHVIZ_VERSION_SOURCE}")

    SET(FIND_GRAPHVIZ_VERSION_ADD_INCLUDES
      "-DINCLUDE_DIRECTORIES:STRING=${GRAPHVIZ_INCLUDE_DIR}")

    IF(NOT CMAKE_CROSSCOMPILING)
      TRY_RUN(RUN_RESULT COMPILE_RESULT
        ${CMAKE_BINARY_DIR}
        ${FIND_GRAPHVIZ_VERSION_SOURCE_FILE}
        CMAKE_FLAGS "${FIND_GRAPHVIZ_VERSION_ADD_INCLUDES}"
        RUN_OUTPUT_VARIABLE GRAPHVIZ_VERSION)
    ENDIF()

    IF(COMPILE_RESULT AND RUN_RESULT EQUAL 1 AND NOT CMAKE_CROSSCOMPILING)
      MESSAGE(STATUS "Found Graphviz version ${GRAPHVIZ_VERSION}")
      IF(${GRAPHVIZ_VERSION} VERSION_LESS ${GRAPHVIZ_MIN_VERSION})
        MESSAGE(STATUS "Graphviz version ${GRAPHVIZ_VERSION} is too old. At least version ${GRAPHVIZ_MIN_VERSION} is needed.")
        SET(GRAPHVIZ_FOUND FALSE)
        SET(GRAPHVIZ_INCLUDE_DIR "")
        SET(GRAPHVIZ_CDT_LIBRARY "")
        SET(GRAPHVIZ_GVC_LIBRARY "")
        SET(GRAPHVIZ_CGRAPH_LIBRARY "")
        SET(GRAPHVIZ_GRAPH_LIBRARY "")
        SET(GRAPHVIZ_PATHPLAN_LIBRARY "")
      ELSE(${GRAPHVIZ_VERSION} VERSION_LESS ${GRAPHVIZ_MIN_VERSION})
        # Compute the major and minor version numbers
        IF(NOT CMAKE_CROSSCOMPILING)
          STRING(REPLACE "." ";" VL ${GRAPHVIZ_VERSION})
          LIST(GET VL 0 GRAPHVIZ_MAJOR_VERSION)
          LIST(GET VL 1 GRAPHVIZ_MINOR_VERSION)
          LIST(GET VL 2 GRAPHVIZ_PATCH_VERSION)
        ENDIF()
      ENDIF(${GRAPHVIZ_VERSION} VERSION_LESS ${GRAPHVIZ_MIN_VERSION})
    ELSE()
      IF(NOT CMAKE_CROSSCOMPILING)
        MESSAGE(FATAL_ERROR "Unable to compile or run the graphviz version detection program.")
      ENDIF()
    ENDIF()
  ELSEIF(WIN32)
    FIND_PROGRAM(DOT_TOOL dot PATHS ${_GRAPHVIZ_ROOT}/bin)
    MESSAGE(STATUS "DOT_TOOL : ${DOT_TOOL}")
    EXECUTE_PROCESS(COMMAND ${DOT_TOOL} -V OUTPUT_VARIABLE DOT_VERSION_OUTPUT ERROR_VARIABLE DOT_VERSION_OUTPUT OUTPUT_QUIET)
    STRING(REGEX MATCH "([0-9]+\\.[0-9]+\\.[0-9]+)" GRAPHVIZ_VERSION "${DOT_VERSION_OUTPUT}")
    STRING(REPLACE "." ";" VL ${GRAPHVIZ_VERSION})
    LIST(GET VL 0 GRAPHVIZ_MAJOR_VERSION)
    LIST(GET VL 1 GRAPHVIZ_MINOR_VERSION)
    LIST(GET VL 2 GRAPHVIZ_PATCH_VERSION)
  ENDIF()

  IF(NOT GRAPHVIZ_FIND_QUIETLY)
    MESSAGE(STATUS "Found Graphviz: ${GRAPHVIZ_CDT_LIBRARY} ${GRAPHVIZ_GVC_LIBRARY} ${GRAPHVIZ_CGRAPH_LIBRARY} ${GRAPHVIZ_GRAPH_LIBRARY} ${GRAPHVIZ_PATHPLAN_LIBRARY}")
  ENDIF()
ELSE()
  IF(GRAPHVIZ_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could NOT find Graphivz")
  ENDIF()
ENDIF()
